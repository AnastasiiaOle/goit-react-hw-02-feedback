{"version":3,"sources":["components/Section/Section.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","className","styles","button","type","name","onClick","shortid","generate","App","state","countTotalFeedback","countPositivePercentage","event","target","setState","prevState","this","Number","toFixed","objKey","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oOAceA,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,oCACI,6BAAKD,IACJC,MCSMC,EAZM,SAAC,GAAgB,IAAfC,EAAc,EAAdA,QACnB,OACI,mCACA,4BAAIA,OCuBGC,EAxBI,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAC7C,OACI,qCACA,4CACW,IAAVD,EACA,cAAC,EAAD,CAAcL,QAAQ,sBACtB,qCACG,uCAAUE,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,e,gCCQGC,EAnBS,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,gBAChC,OACI,mCACCD,EAAQE,KAAI,SAACC,GAAD,OACT,wBAAQC,UAAWC,IAAOC,OAAiCC,KAAK,SAASC,KAAML,EAAQM,QAASR,EAAhG,SACKE,GADkCO,IAAQC,kBCiD5CC,E,4MAjDXC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPkB,mBAAqB,WACnB,MAA+B,EAAKD,MACpC,OADA,EAAQnB,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBmB,wBAA0B,WAExB,OAAgB,IADC,EAAKF,MAAdnB,KACe,EAAKoB,sB,EAG9Bb,gBAAkB,SAACe,GACjB,IAAMR,EAAOQ,EAAMC,OAAOT,KAC1B,EAAKU,UAAS,SAACC,GAAD,sBACXX,EAAMW,EAAUX,GAAQ,O,4CAM7B,WACE,MAA+BY,KAAKP,MAA5BnB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQuB,KAAKN,qBACbhB,EAAqBuB,OAAOD,KAAKL,0BAA0BO,WAC3DC,EAASC,OAAOC,KAAKL,KAAKP,OAEhC,OACE,qBAAKT,UAAU,MAAf,SACA,eAAC,EAAD,CAASf,MAAM,wBAAf,UACE,cAAC,EAAD,CAAiBW,QAASuB,EAAQtB,gBAAiBmB,KAAKnB,kBAC1D,cAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GA1CZ4B,aCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.286acae3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n    <section>\n        <h2>{title}</h2>\n        {children}\n    </section>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default Section; \n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({message }) => {\n    return (\n        <>\n        <p>{message}</p>\n        </>\n    );\n};\n\nNotification.propTypes= {\n    message: PropTypes.string.isRequired\n};\n\nexport default Notification;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../Notification/Notification';\n\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage}) => {\n    return (\n        <>\n        <h2>Statistics</h2>\n        {total === 0 ? \n        (<Notification message='No feedback given'/>) :\n        (<>\n            <p>Good: {good}</p>\n            <p>Neutral: {neutral}</p>\n            <p>Bad: {bad}</p>\n            <p>Total: {total}</p>\n            <p>Positive feedback: {positivePercentage} %</p>\n        </>)}\n</>);\n};\n        \nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n}\n\nexport default Statistics;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid'; \nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback}) => {\n    return (\n        <>\n        {options.map((option) => (\n            <button className={styles.button} key={shortid.generate()} type=\"button\" name={option} onClick={onLeaveFeedback}>\n                {option}\n            </button>\n        )\n        )}\n        </>\n    );\n\n};\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.array.isRequired, \n    onLeaveFeedback: PropTypes.func\n};\n\nexport default FeedbackOptions;","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\n\n\n\nclass App extends Component {\n\n    state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    countTotalFeedback = () => {\n      const { good, neutral, bad } = this.state;\n      return good+neutral+bad;\n    };\n\n    countPositivePercentage = () => {\n      const { good } = this.state;\n      return ((good * 100) / this.countTotalFeedback());\n    }\n\n    onLeaveFeedback = (event) => {\n      const name = event.target.name;\n      this.setState((prevState) => ({\n        [name]:prevState[name] + 1\n      }\n\n      ));\n    };\n\n    render () {\n      const { good, neutral, bad } = this.state;\n      const total = this.countTotalFeedback();\n      const positivePercentage = Number(this.countPositivePercentage().toFixed());\n      const objKey = Object.keys(this.state);\n\n      return (\n        <div className=\"App\">\n        <Section title='Please leave feedback'>\n          <FeedbackOptions options={objKey} onLeaveFeedback={this.onLeaveFeedback}/>\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={positivePercentage}\n        />\n        </Section>\n        </div>\n      );\n    }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3n-hy\"};"],"sourceRoot":""}